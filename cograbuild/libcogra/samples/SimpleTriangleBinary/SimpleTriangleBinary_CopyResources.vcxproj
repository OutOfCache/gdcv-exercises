<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{01818489-D54E-3ADE-9A9F-545448662F9F}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>SimpleTriangleBinary_CopyResources</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\glfw\include;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\CMakeProjects\glad\include;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\glm;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\libcogra\interface;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\imgui;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\CMakeProjects\tinyfd;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\clip;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\spdlog\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\glfw\include;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\CMakeProjects\glad\include;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\glm;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\libcogra\interface;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\imgui;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\CMakeProjects\tinyfd;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\clip;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\spdlog\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\glfw\include;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\CMakeProjects\glad\include;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\glm;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\libcogra\interface;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\imgui;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\CMakeProjects\tinyfd;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\clip;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\spdlog\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\glfw\include;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\CMakeProjects\glad\include;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\glm;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\libcogra\interface;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\imgui;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\CMakeProjects\tinyfd;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\clip;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\contrib\submodules\spdlog\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Lenovo\Downloads\gdcv\cograbuild\CMakeFiles\913ccec451a89d51073ebed6eb130c46\triangle.frag.spv.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating shaders/triangle.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
Vulkan_INCLUDE_DIR-NOTFOUND\glslangValidator.exe --target-env vulkan1.2 C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/shaders/triangle.frag -V -o C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/shaders/triangle.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating shaders/triangle.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
Vulkan_INCLUDE_DIR-NOTFOUND\glslangValidator.exe --target-env vulkan1.2 C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/shaders/triangle.frag -V -o C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/shaders/triangle.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating shaders/triangle.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
Vulkan_INCLUDE_DIR-NOTFOUND\glslangValidator.exe --target-env vulkan1.2 C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/shaders/triangle.frag -V -o C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/shaders/triangle.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating shaders/triangle.frag.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
Vulkan_INCLUDE_DIR-NOTFOUND\glslangValidator.exe --target-env vulkan1.2 C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/shaders/triangle.frag -V -o C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/shaders/triangle.frag.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Lenovo\Downloads\gdcv\cograbuild\CMakeFiles\913ccec451a89d51073ebed6eb130c46\triangle.vert.spv.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating shaders/triangle.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
Vulkan_INCLUDE_DIR-NOTFOUND\glslangValidator.exe --target-env vulkan1.2 C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/shaders/triangle.vert -V -o C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/shaders/triangle.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating shaders/triangle.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
Vulkan_INCLUDE_DIR-NOTFOUND\glslangValidator.exe --target-env vulkan1.2 C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/shaders/triangle.vert -V -o C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/shaders/triangle.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating shaders/triangle.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
Vulkan_INCLUDE_DIR-NOTFOUND\glslangValidator.exe --target-env vulkan1.2 C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/shaders/triangle.vert -V -o C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/shaders/triangle.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating shaders/triangle.vert.spv</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
Vulkan_INCLUDE_DIR-NOTFOUND\glslangValidator.exe --target-env vulkan1.2 C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/shaders/triangle.vert -V -o C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/shaders/triangle.vert.spv
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert.spv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Lenovo\Downloads\gdcv\cograbuild\CMakeFiles\d8fecbebaf20a0969ccc6f2aeb0c2094\SimpleTriangleBinary_CopyResources.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag.spv;C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\SimpleTriangleBinary_CopyResources</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag.spv;C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\SimpleTriangleBinary_CopyResources</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag.spv;C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\SimpleTriangleBinary_CopyResources</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.frag.spv;C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\shaders\triangle.vert.spv;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\SimpleTriangleBinary_CopyResources</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\samples\SimpleTriangleBinary\CMakeLists.txt">
      <StdOutEncoding>UTF-8</StdOutEncoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/Lenovo/Downloads/gdcv/cogra -BC:/Users/Lenovo/Downloads/gdcv/cograbuild --check-stamp-file C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.20\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindVulkan.cmake;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\buildutils\CreateApp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/Lenovo/Downloads/gdcv/cogra -BC:/Users/Lenovo/Downloads/gdcv/cograbuild --check-stamp-file C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.20\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindVulkan.cmake;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\buildutils\CreateApp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/Lenovo/Downloads/gdcv/cogra -BC:/Users/Lenovo/Downloads/gdcv/cograbuild --check-stamp-file C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.20\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindVulkan.cmake;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\buildutils\CreateApp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/Lenovo/Downloads/gdcv/cogra/libcogra/samples/SimpleTriangleBinary/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/Lenovo/Downloads/gdcv/cogra -BC:/Users/Lenovo/Downloads/gdcv/cograbuild --check-stamp-file C:/Users/Lenovo/Downloads/gdcv/cograbuild/libcogra/samples/SimpleTriangleBinary/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.20\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.20\Modules\FindVulkan.cmake;C:\Users\Lenovo\Downloads\gdcv\cogra\libcogra\buildutils\CreateApp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="C:\Users\Lenovo\Downloads\gdcv\cograbuild\libcogra\samples\SimpleTriangleBinary\CMakeFiles\SimpleTriangleBinary_CopyResources">
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\Lenovo\Downloads\gdcv\cograbuild\ZERO_CHECK.vcxproj">
      <Project>{E50EAE39-D55D-3329-B63B-DDF693285576}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.targets" />
  </ImportGroup>
</Project>